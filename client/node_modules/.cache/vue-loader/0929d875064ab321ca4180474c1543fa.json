{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\SetPrizeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\SetPrizeForm.vue","mtime":1657952119555},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'SetPrizeForm',\n    // props: {\n    //     taskID: {\n    //         type: String,\n    //         default: () => ''\n    //     }\n    // },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance']),\n        ...mapGetters('accounts', ['activeAccount', 'activeBalance'])\n    },\n    methods: {\n        onSubmit() {\n            this.drizzleInstance\n                .contracts['Todos']\n                .methods['setPrize']\n                .cacheSend(this.taskID, {\n                    from: this.activeAccount,\n                    value: this.drizzleInstance.web3\n                        .utils.toWei(this.prizeAmount,'ether')\n                })\n        }\n    },\n    data: () => ({\n        taskID: '',\n        prizeAmount: '',\n    })\n}\n",{"version":3,"sources":["SetPrizeForm.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SetPrizeForm.vue","sourceRoot":"src","sourcesContent":["<template>\n    <form>\n        <input v-model=\"taskID\" placeholder=\"Task ID\" type=\"text\">\n        <input v-model=\"prizeAmount\" placeholder=\"Prize Amount (Eth)\" type=\"text\">\n        <button @click.prevent=\"onSubmit\">Submit</button>\n    </form>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'SetPrizeForm',\n    // props: {\n    //     taskID: {\n    //         type: String,\n    //         default: () => ''\n    //     }\n    // },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance']),\n        ...mapGetters('accounts', ['activeAccount', 'activeBalance'])\n    },\n    methods: {\n        onSubmit() {\n            this.drizzleInstance\n                .contracts['Todos']\n                .methods['setPrize']\n                .cacheSend(this.taskID, {\n                    from: this.activeAccount,\n                    value: this.drizzleInstance.web3\n                        .utils.toWei(this.prizeAmount,'ether')\n                })\n        }\n    },\n    data: () => ({\n        taskID: '',\n        prizeAmount: '',\n    })\n}\n</script>\n"]}]}