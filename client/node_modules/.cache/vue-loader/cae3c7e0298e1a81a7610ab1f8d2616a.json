{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\Tasks.vue","mtime":1657952119618},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport TaskRow from './TaskRow'\n\nconst args = {\n    contractName: 'Todos',\n    method: 'getTasks',\n    methodArgs: ''\n}\n\nexport default {\n    name: 'Tasks',\n    components: {\n        TaskRow\n    },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance', 'isDrizzleInitialized']),\n        ...mapGetters('contracts', ['getContractData']),\n        rawTasks() {\n            return this.getContractData({\n                contract: args.contractName,\n                method: args.method\n            });\n        },\n        tasks() {\n            let outputTaks = [...this.rawTasks];\n            outputTaks.forEach((task, index, theArray) => {\n                theArray[index] =  {\n                    'description': task[0],\n                    'createdAt': task[1],\n                    'value': task[2],\n                    'dueDate': task[3],\n                    'completed': task[4],\n                    'cleared': task[5],\n                };\n            });\n            return outputTaks;\n        }\n    },\n    created() {\n        this.$store.dispatch('drizzle/REGISTER_CONTRACT', args)\n    }\n}\n",{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tasks.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div v-if=\"isDrizzleInitialized\">\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Created At</th>\n                    <th scope=\"col\">Due Date</th>\n                    <th scope=\"col\">Complete</th>\n                    <th scope=\"col\">Prize</th>\n                    <th scope=\"col\">Remove</th>\n                </tr>\n            </thead>\n            <tbody>\n                <TaskRow v-for=\"(task, index) in tasks\" :key=\"index\" :taskID=\"index.toString()\" :task=\"task\" />\n            </tbody>\n        </table>\n\n    </div>\n    <div v-else>\n        <p>Loading...</p>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport TaskRow from './TaskRow'\n\nconst args = {\n    contractName: 'Todos',\n    method: 'getTasks',\n    methodArgs: ''\n}\n\nexport default {\n    name: 'Tasks',\n    components: {\n        TaskRow\n    },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance', 'isDrizzleInitialized']),\n        ...mapGetters('contracts', ['getContractData']),\n        rawTasks() {\n            return this.getContractData({\n                contract: args.contractName,\n                method: args.method\n            });\n        },\n        tasks() {\n            let outputTaks = [...this.rawTasks];\n            outputTaks.forEach((task, index, theArray) => {\n                theArray[index] =  {\n                    'description': task[0],\n                    'createdAt': task[1],\n                    'value': task[2],\n                    'dueDate': task[3],\n                    'completed': task[4],\n                    'cleared': task[5],\n                };\n            });\n            return outputTaks;\n        }\n    },\n    created() {\n        this.$store.dispatch('drizzle/REGISTER_CONTRACT', args)\n    }\n}\n</script>\n"]}]}