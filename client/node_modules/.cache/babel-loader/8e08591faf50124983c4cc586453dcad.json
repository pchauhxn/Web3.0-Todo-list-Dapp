{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\AddTaskForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\AddTaskForm.vue","mtime":1658034327248},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/todo-list-dapp-main/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nvar args = {\n  contractName: 'Todos',\n  method: 'add',\n  methodArgs: ['_description', '_dueDate']\n};\nexport default {\n  name: 'AddTaskForm',\n  components: {},\n  computed: _objectSpread({}, mapGetters('drizzle', ['drizzleInstance', 'isDrizzleInitialized'])),\n  methods: {\n    onSubmit: function onSubmit() {\n      var timestamp = 0;\n\n      if (this.date != \"\" && this.time != \"\") {\n        var datetimeString = this.date + \" \" + this.time;\n        timestamp = moment(datetimeString, \"YYYY-MM-DD HH:mm\").unix();\n      }\n\n      this.drizzleInstance.contracts[args.contractName].methods[args.method].cacheSend(this.description, timestamp);\n    }\n  },\n  data: function data() {\n    return {\n      description: '',\n      date: '',\n      time: ''\n    };\n  }\n};",{"version":3,"sources":["AddTaskForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,IAAA,IAAA,GAAA;AACA,EAAA,YAAA,EAAA,OADA;AAEA,EAAA,MAAA,EAAA,KAFA;AAGA,EAAA,UAAA,EAAA,CAAA,cAAA,EAAA,UAAA;AAHA,CAAA;AAMA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,QAAA,oBACA,UAAA,CAAA,SAAA,EAAA,CAAA,iBAAA,EAAA,sBAAA,CAAA,CADA,CAHA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,SAAA,GAAA,CAAA;;AACA,UAAA,KAAA,IAAA,IAAA,EAAA,IAAA,KAAA,IAAA,IAAA,EAAA,EAAA;AACA,YAAA,cAAA,GAAA,KAAA,IAAA,GAAA,GAAA,GAAA,KAAA,IAAA;AACA,QAAA,SAAA,GAAA,MAAA,CAAA,cAAA,EAAA,kBAAA,CAAA,CAAA,IAAA,EAAA;AACA;;AACA,WAAA,eAAA,CACA,SADA,CACA,IAAA,CAAA,YADA,EAEA,OAFA,CAEA,IAAA,CAAA,MAFA,EAGA,SAHA,CAGA,KAAA,WAHA,EAGA,SAHA;AAIA;AAXA,GANA;AAmBA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA;AAnBA,CAAA","sourcesContent":["<template>\n    <div v-if=\"isDrizzleInitialized\">\n\n        <div>\n            <b-form inline class=\"row\" @submit.prevent=\"onSubmit\">\n\n                <div class=\"col-sm-5\">\n                    <b-form-input\n                    v-model=\"description\"\n                    class=\"mb-2\"\n                    placeholder=\"Task Description\"\n                    ></b-form-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <b-form-input type=\"date\" v-model=\"date\" class=\"mb-2\"></b-form-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <b-form-input type=\"time\" v-model=\"time\" class=\"mb-2\"></b-form-input>\n                </div>\n\n                <div class=\"col-sm-1\">\n                    <b-button type=\"submit\" variant=\"primary\">Add</b-button>\n                </div>\n \n            </b-form>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport moment from 'moment'\n\nconst args = {\n    contractName: 'Todos',\n    method: 'add',\n    methodArgs: ['_description', '_dueDate']\n}\n\nexport default {\n    name: 'AddTaskForm',\n    components: {},\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance', 'isDrizzleInitialized']),\n    },\n    methods: {\n        onSubmit() {\n            let timestamp = 0;\n            if (this.date != \"\" && this.time != \"\") {\n                let datetimeString = this.date + \" \" + this.time;\n                timestamp = moment(datetimeString, \"YYYY-MM-DD HH:mm\").unix();\n            }\n            this.drizzleInstance\n                .contracts[args.contractName]\n                .methods[args.method]\n                .cacheSend(this.description, timestamp);\n        }\n    },\n    data: () => ({\n        description: '',\n        date: '',\n        time: '',\n    })\n}\n</script>\n"],"sourceRoot":"src"}]}