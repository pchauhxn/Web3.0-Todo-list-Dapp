{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\Debugs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\Debugs.vue","mtime":1657957784292},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/todo-list-dapp-main/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SetPrizeForm from \"./SetPrizeForm\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Debugs',\n  components: {\n    SetPrizeForm: SetPrizeForm\n  },\n  computed: _objectSpread({}, mapGetters('drizzle', ['isDrizzleInitialized']))\n};",{"version":3,"sources":["Debugs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,OAAA,YAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,oBACA,UAAA,CAAA,SAAA,EAAA,CAAA,sBAAA,CAAA,CADA;AALA,CAAA","sourcesContent":["<template>\n  <div v-if=\"isDrizzleInitialized\">\n    <!-- <div>\n\n      <h5 class=\"pt-2\">Set a Task as Completed</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"setComplete\"\n        :placeholders=\"['Task ID']\"\n      />\n      \n      <h5 class=\"pt-2\">Set Prize for a Task</h5>\n      <SetPrizeForm />\n      \n      <h5 class=\"pt-2\">Clear a Task</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"clear\"\n        :placeholders=\"['Task ID']\"\n      />\n\n      <h5 class=\"pt-2\">Remove a Task</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"remove\"\n        :placeholders=\"['Task ID']\"\n      />\n\n      <h5 class=\"pt-2\">Add a Task</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"add\"\n        :placeholders=\"['Description', 'Due Date']\"\n      />\n\n      <h5 class=\"pt-2\">Tasks List</h5>\n      <drizzle-contract contractName=\"Todos\" method=\"getTasks\" />\n\n      <h5 class=\"pt-2\">Pause contract deposits</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"pause\"\n      />\n\n      <h5 class=\"pt-2\">Unpause contract deposits</h5>\n      <drizzle-contract-form\n        contractName=\"Todos\"\n        method=\"unpause\"\n      />\n\n    </div> -->\n    \n  </div>\n\n  <div v-else>Loading...</div>\n</template>\n\n<script>\nimport SetPrizeForm from './SetPrizeForm'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'Debugs',\n  components: {\n    SetPrizeForm\n  },\n  computed: {\n    ...mapGetters('drizzle', ['isDrizzleInitialized']),\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src"}]}