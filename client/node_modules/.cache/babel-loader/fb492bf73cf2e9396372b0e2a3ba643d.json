{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\TaskRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\TaskRow.vue","mtime":1657952119588},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _defineProperty from \"C:/todo-list-dapp-main/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: 'TaskRow',\n  props: {\n    taskID: String,\n    task: Object\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('drizzle', ['drizzleInstance'])), mapGetters('accounts', ['activeAccount', 'activeBalance'])),\n  methods: {\n    doAction: function doAction(_method) {\n      this.drizzleInstance.contracts[this.contractName].methods[_method].cacheSend(this.taskID);\n    },\n    onCompleteSubmit: function onCompleteSubmit() {\n      var method = 'setComplete';\n      this.doAction(method);\n    },\n    onClearSubmit: function onClearSubmit() {\n      var method = 'clear';\n      this.doAction(method);\n    },\n    onRemoveSubmit: function onRemoveSubmit() {\n      var method = 'remove';\n      this.doAction(method);\n    },\n    onSetPrizeSubmit: function onSetPrizeSubmit() {\n      this.drizzleInstance.contracts[this.contractName].methods['setPrize'].cacheSend(this.taskID, {\n        from: this.activeAccount,\n        value: this.drizzleInstance.web3.utils.toWei(this.prizeAmount, 'ether')\n      });\n    },\n    prizeValueString: function prizeValueString(_valueInWei) {\n      var web3 = this.drizzleInstance.web3;\n      var valueInWei = new web3.utils.BN(_valueInWei);\n\n      if (valueInWei.toString() == '0') {\n        return '-';\n      }\n\n      return web3.utils.fromWei(valueInWei) + ' Ξ';\n    },\n    beautyDatetime: function beautyDatetime(timestamp) {\n      if (timestamp == 0 || timestamp == '0') {\n        return \"-\";\n      }\n\n      var m = moment(timestamp * 1000);\n      var mAbsolute = m.format('YYYY/MM/DD HH:mm:ss');\n      var mDiff = m.fromNow();\n      return \"\".concat(mAbsolute, \" (\").concat(mDiff, \")\");\n    }\n  },\n  data: function data() {\n    return {\n      contractName: 'Todos',\n      prizeAmount: ''\n    };\n  }\n};",{"version":3,"sources":["TaskRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA;AAFA,GAFA;AAMA,EAAA,QAAA,kCACA,UAAA,CAAA,SAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,UAAA,CAAA,UAAA,EAAA,CAAA,eAAA,EAAA,eAAA,CAAA,CAFA,CANA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,OADA,EACA;AACA,WAAA,eAAA,CACA,SADA,CACA,KAAA,YADA,EAEA,OAFA,CAEA,OAFA,EAGA,SAHA,CAGA,KAAA,MAHA;AAIA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,UAAA,MAAA,GAAA,aAAA;AACA,WAAA,QAAA,CAAA,MAAA;AACA,KAVA;AAWA,IAAA,aAXA,2BAWA;AACA,UAAA,MAAA,GAAA,OAAA;AACA,WAAA,QAAA,CAAA,MAAA;AACA,KAdA;AAeA,IAAA,cAfA,4BAeA;AACA,UAAA,MAAA,GAAA,QAAA;AACA,WAAA,QAAA,CAAA,MAAA;AACA,KAlBA;AAmBA,IAAA,gBAnBA,8BAmBA;AACA,WAAA,eAAA,CACA,SADA,CACA,KAAA,YADA,EAEA,OAFA,CAEA,UAFA,EAGA,SAHA,CAGA,KAAA,MAHA,EAGA;AACA,QAAA,IAAA,EAAA,KAAA,aADA;AAEA,QAAA,KAAA,EAAA,KAAA,eAAA,CAAA,IAAA,CACA,KADA,CACA,KADA,CACA,KAAA,WADA,EACA,OADA;AAFA,OAHA;AAQA,KA5BA;AA6BA,IAAA,gBA7BA,4BA6BA,WA7BA,EA6BA;AACA,UAAA,IAAA,GAAA,KAAA,eAAA,CAAA,IAAA;AACA,UAAA,UAAA,GAAA,IAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,WAAA,CAAA;;AACA,UAAA,UAAA,CAAA,QAAA,MAAA,GAAA,EAAA;AACA,eAAA,GAAA;AACA;;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,IAAA;AACA,KApCA;AAqCA,IAAA,cArCA,0BAqCA,SArCA,EAqCA;AACA,UAAA,SAAA,IAAA,CAAA,IAAA,SAAA,IAAA,GAAA,EAAA;AACA,eAAA,GAAA;AACA;;AACA,UAAA,CAAA,GAAA,MAAA,CAAA,SAAA,GAAA,IAAA,CAAA;AACA,UAAA,SAAA,GAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,CAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,OAAA,EAAA;AACA,uBAAA,SAAA,eAAA,KAAA;AACA;AA7CA,GAVA;AAyDA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA,OADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAAA;AAzDA,CAAA","sourcesContent":["<template>\n    <tr>\n        <th scope=\"row\">{{ taskID }}</th>\n        <td>{{ task.description }}</td>\n        <td>{{ beautyDatetime(task.createdAt) }}</td>\n        <td>{{ beautyDatetime(task.dueDate) }}</td>\n        <td>\n            <div v-if=\"task.completed\" style=\"white-space: nowrap;\">\n                <b-form-checkbox v-model=\"task.completed\" disabled>\n                    &nbsp;Completed\n                </b-form-checkbox>\n            </div>\n            <div v-else>\n                <!-- <b-form-checkbox v-model=\"task.completed\" @change=\"onCompleteSubmit\">\n                    &nbsp;Complete\n                </b-form-checkbox> -->\n                <b-button\n                    size=\"sm\" @click.prevent=\"onCompleteSubmit\"\n                    :variant=\"task.value!='0' ? 'warning' : 'success'\"\n                >\n                    Complete\n                </b-button>\n            </div>\n        </td>\n        <td>\n            <span v-if=\"task.value != '0'\">{{ prizeValueString(task.value) }}</span>\n            <div v-else-if=\"task.dueDate != '0' && task.completed == '0'\" class=\"row\">\n                <b-form inline class=\"row\" @submit.prevent=\"onSetPrizeSubmit\">\n                    <div class=\"col-md-7 col-sm-12\">\n                        <b-input size=\"sm\" v-model=\"prizeAmount\" placeholder=\"Amount (Ξ)\" type=\"text\" />\n                    </div>\n                    <div class=\"col-md-5 col-sm-12\">\n                        <b-button size=\"sm\" variant=\"warning\" type=\"submit\">Set Prize</b-button>\n                    </div>\n                </b-form>\n            </div>\n        </td>\n        <td>\n            <b-button v-if=\"task.cleared\" size=\"sm\" variant=\"danger\" @click.prevent=\"onRemoveSubmit\">Remove</b-button>\n            <b-button v-else size=\"sm\" variant=\"primary\" @click.prevent=\"onClearSubmit\">Clear</b-button>\n        </td>\n    </tr>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport moment from 'moment'\n\nexport default {\n    name: 'TaskRow',\n    props: {\n        taskID: String,\n        task: Object\n    },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance']),\n        ...mapGetters('accounts', ['activeAccount', 'activeBalance'])\n    },\n    methods: {\n        doAction(_method) {\n            this.drizzleInstance\n                .contracts[this.contractName]\n                .methods[_method]\n                .cacheSend(this.taskID)\n        },\n        onCompleteSubmit() {\n            const method = 'setComplete';\n            this.doAction(method);\n        },\n        onClearSubmit() {\n            const method = 'clear';\n            this.doAction(method);\n        },\n        onRemoveSubmit() {\n            const method = 'remove';\n            this.doAction(method);\n        },\n        onSetPrizeSubmit() {\n            this.drizzleInstance\n                .contracts[this.contractName]\n                .methods['setPrize']\n                .cacheSend(this.taskID, {\n                    from: this.activeAccount,\n                    value: this.drizzleInstance.web3\n                        .utils.toWei(this.prizeAmount,'ether')\n                })\n        },\n        prizeValueString(_valueInWei) {\n            const web3 = this.drizzleInstance.web3;\n            const valueInWei = new web3.utils.BN(_valueInWei);\n            if (valueInWei.toString() == '0') {\n                    return '-';\n            }\n            return web3.utils.fromWei(valueInWei) + ' Ξ';\n        },\n        beautyDatetime(timestamp) {\n            if (timestamp == 0 || timestamp == '0') {\n                return \"-\";\n            }\n            const m = moment(timestamp*1000);\n            const mAbsolute = m.format('YYYY/MM/DD HH:mm:ss');\n            const mDiff = m.fromNow();\n            return `${mAbsolute} (${mDiff})`;\n        }\n    },\n    data: () => ({\n        contractName: 'Todos',\n        prizeAmount: '',\n    })\n}\n</script>\n"],"sourceRoot":"src"}]}