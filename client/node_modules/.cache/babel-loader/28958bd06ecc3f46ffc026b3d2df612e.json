{"remainingRequest":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\todo-list-dapp-main\\client\\src\\SetPrizeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\todo-list-dapp-main\\client\\src\\SetPrizeForm.vue","mtime":1657952119555},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1657953764168},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657953763433},{"path":"C:\\todo-list-dapp-main\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1657953753264}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/todo-list-dapp-main/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'SetPrizeForm',\n  // props: {\n  //     taskID: {\n  //         type: String,\n  //         default: () => ''\n  //     }\n  // },\n  computed: _objectSpread(_objectSpread({}, mapGetters('drizzle', ['drizzleInstance'])), mapGetters('accounts', ['activeAccount', 'activeBalance'])),\n  methods: {\n    onSubmit: function onSubmit() {\n      this.drizzleInstance.contracts['Todos'].methods['setPrize'].cacheSend(this.taskID, {\n        from: this.activeAccount,\n        value: this.drizzleInstance.web3.utils.toWei(this.prizeAmount, 'ether')\n      });\n    }\n  },\n  data: function data() {\n    return {\n      taskID: '',\n      prizeAmount: ''\n    };\n  }\n};",{"version":3,"sources":["SetPrizeForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AASA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,QAAA,kCACA,UAAA,CAAA,SAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,UAAA,CAAA,UAAA,EAAA,CAAA,eAAA,EAAA,eAAA,CAAA,CAFA,CARA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,eAAA,CACA,SADA,CACA,OADA,EAEA,OAFA,CAEA,UAFA,EAGA,SAHA,CAGA,KAAA,MAHA,EAGA;AACA,QAAA,IAAA,EAAA,KAAA,aADA;AAEA,QAAA,KAAA,EAAA,KAAA,eAAA,CAAA,IAAA,CACA,KADA,CACA,KADA,CACA,KAAA,WADA,EACA,OADA;AAFA,OAHA;AAQA;AAVA,GAZA;AAwBA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAAA;AAxBA,CAAA","sourcesContent":["<template>\n    <form>\n        <input v-model=\"taskID\" placeholder=\"Task ID\" type=\"text\">\n        <input v-model=\"prizeAmount\" placeholder=\"Prize Amount (Eth)\" type=\"text\">\n        <button @click.prevent=\"onSubmit\">Submit</button>\n    </form>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'SetPrizeForm',\n    // props: {\n    //     taskID: {\n    //         type: String,\n    //         default: () => ''\n    //     }\n    // },\n    computed: {\n        ...mapGetters('drizzle', ['drizzleInstance']),\n        ...mapGetters('accounts', ['activeAccount', 'activeBalance'])\n    },\n    methods: {\n        onSubmit() {\n            this.drizzleInstance\n                .contracts['Todos']\n                .methods['setPrize']\n                .cacheSend(this.taskID, {\n                    from: this.activeAccount,\n                    value: this.drizzleInstance.web3\n                        .utils.toWei(this.prizeAmount,'ether')\n                })\n        }\n    },\n    data: () => ({\n        taskID: '',\n        prizeAmount: '',\n    })\n}\n</script>\n"],"sourceRoot":"src"}]}